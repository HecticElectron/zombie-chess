{"ast":null,"code":"var _jsxFileName = \"/Users/hecticelectron/projects/zombie-chess/src/Square.js\",\n  _s = $RefreshSig$();\nimport React, { Component, createContext, useContext, useReducer, useRef, useState, Suspense, lazy, useEffect } from 'react';\nimport GameStateProvider, { useGameStateContext, rowDictionary, columnDictionary } from './GameStateProvider';\nimport Piece from './Piece';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Square({\n  rowIndex,\n  columnIndex\n}) {\n  _s();\n  const {\n    gameState,\n    selectSquare,\n    selectPiece,\n    movePiece\n  } = useGameStateContext();\n  const piece = gameState.boardState[rowIndex][columnIndex];\n  const {\n    sourceSquare,\n    targetSquare\n  } = gameState;\n  const [squareState, setSquareState] = useState({\n    isSourceSquare: false,\n    isTargetSquare: false\n  });\n  // let pieceToMove = '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-row\": rowIndex,\n    \"data-column\": columnIndex,\n    className: `square ${squareState.isSourceSquare ? 'selected-source ' : squareState.isTargetSquare ? 'selected-target ' : ''}row${rowDictionary[rowIndex]} column${columnDictionary[columnIndex]}`,\n    onClick: event => {\n      const pieceToMove = gameState.selectedPiece;\n      if (sourceSquare.rowIndex !== -1 && checkForLegalMove(pieceToMove, sourceSquare, {\n        rowIndex,\n        columnIndex\n      })) {\n        setSquareState({\n          ...squareState,\n          isTargetSquare: true\n        });\n        movePiece(pieceToMove, sourceSquare, targetSquare);\n      } else {\n        setSquareState({\n          ...squareState,\n          isSourceSquare: true\n        });\n        selectSquare(rowIndex, columnIndex);\n        selectPiece(rowIndex, columnIndex);\n        // pieceToMove = gameState.boardState[sourceSquare.rowIndex, sourceSquare.columnIndex];\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Piece, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Square, \"e3KxnlCOVDuHcY1De9QOLvv00t0=\", false, function () {\n  return [useGameStateContext];\n});\n_c = Square;\nvar _c;\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["React","Component","createContext","useContext","useReducer","useRef","useState","Suspense","lazy","useEffect","GameStateProvider","useGameStateContext","rowDictionary","columnDictionary","Piece","jsxDEV","_jsxDEV","Square","rowIndex","columnIndex","_s","gameState","selectSquare","selectPiece","movePiece","piece","boardState","sourceSquare","targetSquare","squareState","setSquareState","isSourceSquare","isTargetSquare","className","onClick","event","pieceToMove","selectedPiece","checkForLegalMove","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hecticelectron/projects/zombie-chess/src/Square.js"],"sourcesContent":["import React, { Component, createContext, useContext, useReducer, useRef, useState, Suspense, lazy, useEffect } from 'react';\nimport GameStateProvider, { useGameStateContext, rowDictionary, columnDictionary } from './GameStateProvider';\nimport Piece from './Piece';\n\nexport default function Square({ rowIndex, columnIndex }) {\n  const { gameState, selectSquare, selectPiece, movePiece } = useGameStateContext();\n  const piece = gameState.boardState[rowIndex][columnIndex];\n  const { sourceSquare, targetSquare } = gameState;\n  const [squareState, setSquareState] = useState({\n    isSourceSquare: false,\n    isTargetSquare: false\n  });\n  // let pieceToMove = '';\n  return (\n    <div\n      data-row={rowIndex}\n      data-column={columnIndex}\n      className={`square ${squareState.isSourceSquare ? 'selected-source ' : (squareState.isTargetSquare ? 'selected-target ' : '')}row${rowDictionary[rowIndex]} column${columnDictionary[columnIndex]}`}\n      onClick={(event) => {\n        const pieceToMove = gameState.selectedPiece;\n        if (sourceSquare.rowIndex !== -1 && checkForLegalMove(pieceToMove, sourceSquare, { rowIndex, columnIndex })) {\n          setSquareState({ ...squareState, isTargetSquare: true });\n          movePiece(pieceToMove, sourceSquare, targetSquare);\n        } else {\n          setSquareState({ ...squareState, isSourceSquare: true });\n          selectSquare(rowIndex, columnIndex);\n          selectPiece(rowIndex, columnIndex);\n          // pieceToMove = gameState.boardState[sourceSquare.rowIndex, sourceSquare.columnIndex];\n        }\n      }}\n    >\n      <Piece />\n    </div>\n  );\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,SAAS,QAAQ,OAAO;AAC5H,OAAOC,iBAAiB,IAAIC,mBAAmB,EAAEC,aAAa,EAAEC,gBAAgB,QAAQ,qBAAqB;AAC7G,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,MAAMA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACxD,MAAM;IAAEC,SAAS;IAAEC,YAAY;IAAEC,WAAW;IAAEC;EAAU,CAAC,GAAGb,mBAAmB,CAAC,CAAC;EACjF,MAAMc,KAAK,GAAGJ,SAAS,CAACK,UAAU,CAACR,QAAQ,CAAC,CAACC,WAAW,CAAC;EACzD,MAAM;IAAEQ,YAAY;IAAEC;EAAa,CAAC,GAAGP,SAAS;EAChD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC;IAC7CyB,cAAc,EAAE,KAAK;IACrBC,cAAc,EAAE;EAClB,CAAC,CAAC;EACF;EACA,oBACEhB,OAAA;IACE,YAAUE,QAAS;IACnB,eAAaC,WAAY;IACzBc,SAAS,EAAE,UAAUJ,WAAW,CAACE,cAAc,GAAG,kBAAkB,GAAIF,WAAW,CAACG,cAAc,GAAG,kBAAkB,GAAG,EAAG,MAAMpB,aAAa,CAACM,QAAQ,CAAC,UAAUL,gBAAgB,CAACM,WAAW,CAAC,EAAG;IACpMe,OAAO,EAAGC,KAAK,IAAK;MAClB,MAAMC,WAAW,GAAGf,SAAS,CAACgB,aAAa;MAC3C,IAAIV,YAAY,CAACT,QAAQ,KAAK,CAAC,CAAC,IAAIoB,iBAAiB,CAACF,WAAW,EAAET,YAAY,EAAE;QAAET,QAAQ;QAAEC;MAAY,CAAC,CAAC,EAAE;QAC3GW,cAAc,CAAC;UAAE,GAAGD,WAAW;UAAEG,cAAc,EAAE;QAAK,CAAC,CAAC;QACxDR,SAAS,CAACY,WAAW,EAAET,YAAY,EAAEC,YAAY,CAAC;MACpD,CAAC,MAAM;QACLE,cAAc,CAAC;UAAE,GAAGD,WAAW;UAAEE,cAAc,EAAE;QAAK,CAAC,CAAC;QACxDT,YAAY,CAACJ,QAAQ,EAAEC,WAAW,CAAC;QACnCI,WAAW,CAACL,QAAQ,EAAEC,WAAW,CAAC;QAClC;MACF;IACF,CAAE;IAAAoB,QAAA,eAEFvB,OAAA,CAACF,KAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACvB,EAAA,CA9BuBH,MAAM;EAAA,QACgCN,mBAAmB;AAAA;AAAAiC,EAAA,GADzD3B,MAAM;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}