{"ast":null,"code":"var _jsxFileName = \"/Users/hecticelectron/projects/zombie-chess/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React, { Component, createContext, useContext, useReducer, useRef, useState, Suspense, lazy, useEffect } from 'react';\nimport GameStateProvider, { useGameStateContext, rowDictionary, columnDictionary } from './GameStateProvider';\nimport Square from './Square';\nimport Piece from './Piece';\n\n// const boardState = [\n//     ['Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z'],\n//     ['Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z'],\n//     ['Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z'],\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', ''],\n//     ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\n//     ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r']\n//   ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Row({\n  rowIndex\n}) {\n  var _s = $RefreshSig$();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `row row${rowDictionary[rowIndex]}`,\n    children: _s(Array.from({\n      length: 8\n    }).map(_s((_, i) => {\n      _s();\n      return /*#__PURE__*/_jsxDEV(Square, {\n        rowIndex: rowIndex,\n        columnIndex: i,\n        pieceHere: useGameStateContext().gameState.boardState[rowIndex][i],\n        children: /*#__PURE__*/_jsxDEV(Piece, {\n          rowIndex: rowIndex,\n          columnIndex: i,\n          pieceName: useGameStateContext().gameState.boardState[rowIndex][i]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, `$row${rowDictionary[rowIndex]}column${columnDictionary[i]}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this);\n    }, \"BFyJFXGv9E9TAHjzbuysaNsPldg=\", false, function () {\n      return [useGameStateContext, useGameStateContext];\n    })), \"BFyJFXGv9E9TAHjzbuysaNsPldg=\", false, function () {\n      return [useGameStateContext, useGameStateContext];\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = Row;\nexport function Chessboard() {\n  _s2();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chessboard\",\n    children: useGameStateContext().gameState.boardState.map((row, rowIndex) => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        rowIndex: rowIndex\n      }, `row${rowDictionary[rowIndex]}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n}\n_s2(Chessboard, \"jo4TWTSHq6AdwlomEEq/p5FZZYM=\", false, function () {\n  return [useGameStateContext];\n});\n_c2 = Chessboard;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Chessboard, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"Chessboard\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","Component","createContext","useContext","useReducer","useRef","useState","Suspense","lazy","useEffect","GameStateProvider","useGameStateContext","rowDictionary","columnDictionary","Square","Piece","jsxDEV","_jsxDEV","Row","rowIndex","_s","$RefreshSig$","className","children","Array","from","length","map","_","i","columnIndex","pieceHere","gameState","boardState","pieceName","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chessboard","_s2","row","_c2","App","_c3","$RefreshReg$"],"sources":["/Users/hecticelectron/projects/zombie-chess/src/App.js"],"sourcesContent":["import React, { Component, createContext, useContext, useReducer, useRef, useState, Suspense, lazy, useEffect } from 'react';\nimport GameStateProvider, { useGameStateContext, rowDictionary, columnDictionary } from './GameStateProvider';\nimport Square from './Square';\nimport Piece from './Piece';\n\n// const boardState = [\n//     ['Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z'],\n//     ['Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z'],\n//     ['Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z'],\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', ''],\n//     ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\n//     ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r']\n//   ];\n\nexport function Row({ rowIndex }) {\n  return (\n    <div className={`row row${rowDictionary[rowIndex]}`}>\n      {Array.from({ length: 8 }).map((_, i) => (\n        <Square\n          rowIndex={rowIndex}\n          columnIndex={i}\n          pieceHere={useGameStateContext().gameState.boardState[rowIndex][i]}\n          key={`$row${rowDictionary[rowIndex]}column${columnDictionary[i]}`}\n        >\n          <Piece\n            rowIndex={rowIndex}\n            columnIndex={i}\n            pieceName={useGameStateContext().gameState.boardState[rowIndex][i]}\n          />\n        </Square>\n      ))}\n    </div>\n  );\n}\n\nexport function Chessboard() {\n  return (\n      <div className='chessboard'>\n        {useGameStateContext().gameState.boardState.map((row, rowIndex) => {\n          return (<Row key={`row${rowDictionary[rowIndex]}`} rowIndex={rowIndex} />)\n        })}\n      </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <Chessboard />\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}