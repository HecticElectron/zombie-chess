{"ast":null,"code":"var _jsxFileName = \"/Users/hecticelectron/projects/zombie-chess/src/Square.js\",\n  _s = $RefreshSig$();\nimport React, { Component, createContext, useContext, useReducer, useRef, useState, Suspense, lazy, useEffect } from 'react';\nimport GameStateProvider, { useGameStateContext, rowDictionary, columnDictionary } from './GameStateProvider';\nimport Piece, { checkForLegalMove, movePiece } from './Piece';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst selectSquare = (rowIndex, columnIndex) => {\n  if (gameState.sourceSquare.rowIndex === -1) {\n    setGameState({\n      ...gameState,\n      sourceSquare: {\n        rowIndex,\n        columnIndex\n      }\n    });\n  } else {\n    setGameState({\n      ...gameState,\n      targetSquare: {\n        rowIndex,\n        columnIndex\n      }\n    });\n  }\n};\nconst selectPiece = (rowIndex, columnIndex) => {\n  if (gameState.sourceSquare.rowIndex === -1) {\n    setGameState({\n      ...gameState,\n      sourceSquare: {\n        rowIndex,\n        columnIndex\n      },\n      selectedPiece: gameState.boardState[rowIndex][columnIndex]\n    });\n  }\n};\nexport default function Square({\n  rowIndex,\n  columnIndex,\n  children\n}) {\n  _s();\n  const {\n    gameState,\n    setSelectedPiece\n  } = useGameStateContext();\n  // const { sourceSquare, targetSquare } = gameState;\n  const [squareState, setSquareState] = useState({\n    isClicked: false,\n    pieceHere: ''\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-row\": rowIndex,\n    \"data-column\": columnIndex,\n    className: `square ${squareState.isClicked ? 'selected-source ' : ''}row${rowDictionary[rowIndex]} column${columnDictionary[columnIndex]}`,\n    onClick: event => {\n      if (squareState.isClicked) {\n        setSquareState({\n          ...squareState,\n          isClicked: false\n        });\n      } else {\n        setSquareState({\n          ...squareState,\n          isClicked: true\n        });\n        if (gameState.selectedPiece) {\n          if (checkForLegalMove(pieceToMove, sourceSquare, {\n            rowIndex,\n            columnIndex\n          })) {\n            setSquareState({\n              ...squareState,\n              pieceHere: gameState.selectedPiece\n            });\n            movePiece(pieceToMove, sourceSquare, targetSquare);\n          }\n        }\n      }\n      if (sourceSquare.rowIndex === -1) {\n        setSquareState({\n          ...squareState,\n          isSourceSquare: true\n        });\n        selectSquare(rowIndex, columnIndex);\n        selectPiece(rowIndex, columnIndex);\n      } else if (checkForLegalMove(pieceToMove, sourceSquare, {\n        rowIndex,\n        columnIndex\n      })) {\n        setSquareState({\n          ...squareState,\n          isTargetSquare: true\n        });\n        movePiece(pieceToMove, sourceSquare, targetSquare);\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Square, \"/zBb4bQzuRXO22xICYm3Lu0e3Kg=\", false, function () {\n  return [useGameStateContext];\n});\n_c = Square;\nvar _c;\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["React","Component","createContext","useContext","useReducer","useRef","useState","Suspense","lazy","useEffect","GameStateProvider","useGameStateContext","rowDictionary","columnDictionary","Piece","checkForLegalMove","movePiece","jsxDEV","_jsxDEV","selectSquare","rowIndex","columnIndex","gameState","sourceSquare","setGameState","targetSquare","selectPiece","selectedPiece","boardState","Square","children","_s","setSelectedPiece","squareState","setSquareState","isClicked","pieceHere","className","onClick","event","pieceToMove","isSourceSquare","isTargetSquare","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hecticelectron/projects/zombie-chess/src/Square.js"],"sourcesContent":["import React, { Component, createContext, useContext, useReducer, useRef, useState, Suspense, lazy, useEffect } from 'react';\nimport GameStateProvider, { useGameStateContext, rowDictionary, columnDictionary } from './GameStateProvider';\nimport Piece, { checkForLegalMove, movePiece } from './Piece';\n\nconst selectSquare = (rowIndex, columnIndex) => {\n  if (gameState.sourceSquare.rowIndex === -1) {\n    setGameState({\n      ...gameState,\n      sourceSquare: {\n        rowIndex,\n        columnIndex\n      }\n    });\n  } else {\n    setGameState({\n      ...gameState,\n      targetSquare: {\n        rowIndex,\n        columnIndex\n      }\n    });\n  }\n};\n\nconst selectPiece = (rowIndex, columnIndex) => {\n  if (gameState.sourceSquare.rowIndex === -1) {\n    setGameState({\n      ...gameState,\n      sourceSquare: {\n        rowIndex,\n        columnIndex\n      },\n      selectedPiece: gameState.boardState[rowIndex][columnIndex]\n    });\n  }\n};\n\nexport default function Square({ rowIndex, columnIndex, children }) {\n  const { gameState, setSelectedPiece } = useGameStateContext();\n  // const { sourceSquare, targetSquare } = gameState;\n  const [squareState, setSquareState] = useState({\n    isClicked: false,\n    pieceHere: ''\n  });\n\n  return (\n    <div\n      data-row={rowIndex}\n      data-column={columnIndex}\n      className={`square ${squareState.isClicked ? 'selected-source ' : ''}row${rowDictionary[rowIndex]} column${columnDictionary[columnIndex]}`}\n      onClick={(event) => {\n        if (squareState.isClicked) {\n          setSquareState({ ...squareState, isClicked: false });\n        } else {\n          setSquareState({ ...squareState, isClicked: true });\n          if (gameState.selectedPiece) {\n            if (checkForLegalMove(pieceToMove, sourceSquare, { rowIndex, columnIndex })) {\n              setSquareState({ ...squareState, pieceHere: gameState.selectedPiece });\n              movePiece(pieceToMove, sourceSquare, targetSquare);\n            }\n          }\n        }\n        if (sourceSquare.rowIndex === -1) {\n          setSquareState({ ...squareState, isSourceSquare: true });\n          selectSquare(rowIndex, columnIndex);\n          selectPiece(rowIndex, columnIndex);\n        } else if (checkForLegalMove(pieceToMove, sourceSquare, { rowIndex, columnIndex })) {\n          setSquareState({ ...squareState, isTargetSquare: true });\n          movePiece(pieceToMove, sourceSquare, targetSquare);\n        }\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}