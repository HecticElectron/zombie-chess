{"ast":null,"code":"var _jsxFileName = \"/Users/hecticelectron/projects/zombie-chess/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { Component, createContext, useContext, useReducer, useRef, useState, Suspense, lazy, useEffect } from 'react';\nimport GameStateProvider, { useGameStateContext, rowDictionary, columnDictionary } from './GameStateProvider';\nimport Square from './Square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Row({\n  rowIndex\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `row row${rowDictionary[rowIndex]}`,\n    children: Array.from({\n      length: 8\n    }).map((_, i) => /*#__PURE__*/_jsxDEV(Square, {\n      rowIndex: rowIndex,\n      columnIndex: i\n    }, `$row${rowDictionary[rowIndex]}column${columnDictionary[i]}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = Row;\nexport function Chessboard() {\n  _s();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chessboard\",\n    children: useGameStateContext().gameState.boardState.map((row, rowIndex) => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        rowIndex: rowIndex\n      }, `row${rowDictionary[rowIndex]}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 19\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n_s(Chessboard, \"jo4TWTSHq6AdwlomEEq/p5FZZYM=\", false, function () {\n  return [useGameStateContext];\n});\n_c2 = Chessboard;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Chessboard, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"Chessboard\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","Component","createContext","useContext","useReducer","useRef","useState","Suspense","lazy","useEffect","GameStateProvider","useGameStateContext","rowDictionary","columnDictionary","Square","jsxDEV","_jsxDEV","Row","rowIndex","className","children","Array","from","length","map","_","i","columnIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chessboard","_s","gameState","boardState","row","_c2","App","_c3","$RefreshReg$"],"sources":["/Users/hecticelectron/projects/zombie-chess/src/App.js"],"sourcesContent":["import React, { Component, createContext, useContext, useReducer, useRef, useState, Suspense, lazy, useEffect } from 'react';\nimport GameStateProvider, { useGameStateContext, rowDictionary, columnDictionary } from './GameStateProvider';\nimport Square from './Square';\n\nexport function Row({ rowIndex }) {\n  return (\n    <div className={`row row${rowDictionary[rowIndex]}`}>\n      {Array.from({ length: 8 }).map((_, i) => (\n        <Square\n          rowIndex={rowIndex}\n          columnIndex={i}\n          key={`$row${rowDictionary[rowIndex]}column${columnDictionary[i]}`}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport function Chessboard() {\n  return (\n      <div className='chessboard'>\n        {useGameStateContext().gameState.boardState.map((row, rowIndex) => {\n          return (<Row key={`row${rowDictionary[rowIndex]}`} rowIndex={rowIndex} />)\n        })}\n      </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <Chessboard />\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,SAAS,QAAQ,OAAO;AAC5H,OAAOC,iBAAiB,IAAIC,mBAAmB,EAAEC,aAAa,EAAEC,gBAAgB,QAAQ,qBAAqB;AAC7G,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,OAAO,SAASC,GAAGA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAChC,oBACEF,OAAA;IAAKG,SAAS,EAAE,UAAUP,aAAa,CAACM,QAAQ,CAAC,EAAG;IAAAE,QAAA,EACjDC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAClCV,OAAA,CAACF,MAAM;MACLI,QAAQ,EAAEA,QAAS;MACnBS,WAAW,EAAED;IAAE,GACV,OAAOd,aAAa,CAACM,QAAQ,CAAC,SAASL,gBAAgB,CAACa,CAAC,CAAC,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GAZef,GAAG;AAcnB,OAAO,SAASgB,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAC3B,oBACIlB,OAAA;IAAKG,SAAS,EAAC,YAAY;IAAAC,QAAA,EACxBT,mBAAmB,CAAC,CAAC,CAACwB,SAAS,CAACC,UAAU,CAACZ,GAAG,CAAC,CAACa,GAAG,EAAEnB,QAAQ,KAAK;MACjE,oBAAQF,OAAA,CAACC,GAAG;QAAuCC,QAAQ,EAAEA;MAAS,GAApD,MAAMN,aAAa,CAACM,QAAQ,CAAC,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CAAC;IAC3E,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEZ;AAACG,EAAA,CAReD,UAAU;EAAA,QAGjBtB,mBAAmB;AAAA;AAAA2B,GAAA,GAHZL,UAAU;AAU1B,eAAe,SAASM,GAAGA,CAAA,EAAG;EAC5B,oBACEvB,OAAA,CAACiB,UAAU;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAElB;AAACS,GAAA,GAJuBD,GAAG;AAAA,IAAAP,EAAA,EAAAM,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}